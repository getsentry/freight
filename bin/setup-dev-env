#!/usr/bin/env bash
# sets up a linux system (e.g. a virtualbox VM managed by Vagrant) to be a dev environment

aptgetquiet () {
    sudo DEBIAN_FRONTEND=noninteractive apt-get -yqq --no-install-recommends ${@}
}

sql () {
    sudo -u postgres psql -d postgres -c "${@}"
}

# add node repo
curl --silent https://deb.nodesource.com/gpgkey/nodesource.gpg.key | sudo apt-key add -
echo "deb https://deb.nodesource.com/node_4.x xenial main" | sudo tee /etc/apt/sources.list.d/nodesource.list

# update system
aptgetquiet update
aptgetquiet dist-upgrade
aptgetquiet autoremove

# install packages
aptgetquiet install python-dev libffi-dev libssl-dev redis-server postgresql python-pip virtualenvwrapper libpq-dev git libkrb5-dev nodejs g++ build-essential


# setup db
sql 'alter role postgres with inherit;'
sql 'create role vagrant with login createdb;'
sql 'grant postgres to vagrant;'
sql 'create database freight;'
sql 'create database test_freight;'

# remove all restrictions on db access
cat <<EOF | sudo tee /etc/postgresql/9.5/main/pg_hba.conf
local   all             all                                     trust
local   all             all                                     trust
host    all             all             127.0.0.1/32            trust
host    all             all             ::1/128                 trust
EOF

sudo service postgresql restart


# set up node
sudo -H npm install -g webpack
pushd /vagrant
npm install --silent
popd


# set up python
sudo -H pip install -qq --upgrade pip setuptools urllib3[secure] virtualenvwrapper

. /etc/bash_completion.d/virtualenvwrapper

mkvirtualenv --system-site-packages freight
pip install -qqr /vagrant/requirements.txt
pip install -qqr /vagrant/requirements-test.txt
add2virtualenv /vagrant
pushd /vagrant
alembic upgrade head
popd
deactivate
